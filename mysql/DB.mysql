-- MySQL dump 10.13  Distrib 5.6.30, for debian-linux-gnueabihf (armv7l)
--
-- Host: localhost    Database: wolfie_home
-- ------------------------------------------------------
-- Server version	5.6.30-1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `DataField`
--

DROP TABLE IF EXISTS `DataField`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `DataField` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `DeviceRef` int(11) NOT NULL,
  `DatafieldName` varchar(10) COLLATE latin1_general_ci NOT NULL,
  `Controllable` tinyint(1) NOT NULL,
  `DataTypeRef` int(11) NOT NULL,
  `Description` varchar(50) COLLATE latin1_general_ci NOT NULL DEFAULT '',
  `CreatedTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `ModifiedTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`Id`),
  UNIQUE KEY `DeviceRef` (`DeviceRef`,`DatafieldName`),
  KEY `DataTypeRef` (`DataTypeRef`),
  CONSTRAINT `DataField_ibfk_1` FOREIGN KEY (`DataTypeRef`) REFERENCES `DataType` (`Id`),
  CONSTRAINT `DataField_ibfk_2` FOREIGN KEY (`DeviceRef`) REFERENCES `Device` (`OwnerRef`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `DataField`
--

LOCK TABLES `DataField` WRITE;
/*!40000 ALTER TABLE `DataField` DISABLE KEYS */;
INSERT INTO `DataField` VALUES (1,1,'Button',0,1,'Default Button. PUSHED = 1, RELEASED = 0.','2016-08-25 11:36:33','2016-08-25 11:36:33'),(2,1,'Led',1,1,'Default LED. ON =1, OFF = 0','2016-08-25 11:36:33','2016-08-25 11:36:33');
/*!40000 ALTER TABLE `DataField` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `DataRecord`
--

DROP TABLE IF EXISTS `DataRecord`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `DataRecord` (
  `Idx` bigint(20) NOT NULL AUTO_INCREMENT,
  `DeviceRef` int(11) NOT NULL,
  `LocationRef` int(11) DEFAULT NULL,
  `CreatedTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`Idx`),
  KEY `LocationRef` (`LocationRef`),
  KEY `DeviceRef` (`DeviceRef`),
  CONSTRAINT `DataRecord_ibfk_1` FOREIGN KEY (`LocationRef`) REFERENCES `Location` (`Id`),
  CONSTRAINT `DataRecord_ibfk_2` FOREIGN KEY (`DeviceRef`) REFERENCES `Device` (`Id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `DataRecord`
--

LOCK TABLES `DataRecord` WRITE;
/*!40000 ALTER TABLE `DataRecord` DISABLE KEYS */;
/*!40000 ALTER TABLE `DataRecord` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `DataType`
--

DROP TABLE IF EXISTS `DataType`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `DataType` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `TypeName` varchar(20) COLLATE latin1_general_ci NOT NULL,
  `Description` varchar(128) COLLATE latin1_general_ci NOT NULL DEFAULT '',
  `CreatedTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `ModifiedTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`Id`),
  UNIQUE KEY `TypeName` (`TypeName`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `DataType`
--

LOCK TABLES `DataType` WRITE;
/*!40000 ALTER TABLE `DataType` DISABLE KEYS */;
INSERT INTO `DataType` VALUES (1,'int','Integer Type','2016-08-25 11:36:33','2016-08-25 11:36:33'),(2,'float','Floating point number Type','2016-08-25 11:36:33','2016-08-25 11:36:33'),(3,'str','String Type','2016-08-25 11:36:33','2016-08-25 11:36:33'),(4,'bool','Boolean Type','2016-08-25 11:36:33','2016-08-25 11:36:33');
/*!40000 ALTER TABLE `DataType` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `Device`
--

DROP TABLE IF EXISTS `Device`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Device` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `OwnerRef` int(11) NOT NULL,
  `Name` varchar(20) COLLATE latin1_general_ci NOT NULL,
  `LocationRef` int(11) DEFAULT NULL,
  `Parent` int(11) DEFAULT NULL,
  `Description` varchar(50) COLLATE latin1_general_ci NOT NULL DEFAULT '',
  `CreatedTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `ModifiedTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`Id`),
  UNIQUE KEY `OwnerRef` (`OwnerRef`,`Name`),
  KEY `LocationRef` (`LocationRef`),
  KEY `Parent` (`Parent`),
  CONSTRAINT `Device_ibfk_1` FOREIGN KEY (`OwnerRef`) REFERENCES `User` (`Id`),
  CONSTRAINT `Device_ibfk_2` FOREIGN KEY (`LocationRef`) REFERENCES `Location` (`Id`),
  CONSTRAINT `Device_ibfk_3` FOREIGN KEY (`Parent`) REFERENCES `Device` (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Device`
--

LOCK TABLES `Device` WRITE;
/*!40000 ALTER TABLE `Device` DISABLE KEYS */;
INSERT INTO `Device` VALUES (1,1,'defaultDevice',NULL,NULL,'It\'s a default Device','2016-08-25 11:36:33','2016-08-25 11:36:33');
/*!40000 ALTER TABLE `Device` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `Location`
--

DROP TABLE IF EXISTS `Location`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Location` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `UserRef` int(11) NOT NULL,
  `Name` varchar(20) COLLATE latin1_general_ci NOT NULL,
  `Parent` int(11) DEFAULT NULL,
  `Description` varchar(50) COLLATE latin1_general_ci NOT NULL DEFAULT '',
  `CreatedTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `ModifiedTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`Id`),
  UNIQUE KEY `UserRef` (`UserRef`,`Name`),
  KEY `Parent` (`Parent`),
  CONSTRAINT `Location_ibfk_1` FOREIGN KEY (`UserRef`) REFERENCES `User` (`Id`),
  CONSTRAINT `Location_ibfk_2` FOREIGN KEY (`Parent`) REFERENCES `Location` (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Location`
--

LOCK TABLES `Location` WRITE;
/*!40000 ALTER TABLE `Location` DISABLE KEYS */;
INSERT INTO `Location` VALUES (1,1,'defaultRoom',NULL,'It\'s a default room','2016-08-25 11:36:33','2016-08-25 11:36:33');
/*!40000 ALTER TABLE `Location` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `RecordFieldValue`
--

DROP TABLE IF EXISTS `RecordFieldValue`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `RecordFieldValue` (
  `Idx` bigint(20) NOT NULL AUTO_INCREMENT,
  `RecordRef` bigint(20) NOT NULL,
  `DeviceRef` int(11) DEFAULT NULL,
  `DataFieldNameRef` varchar(10) COLLATE latin1_general_ci NOT NULL,
  `Value` varchar(30) COLLATE latin1_general_ci NOT NULL,
  PRIMARY KEY (`Idx`),
  KEY `RecordRef` (`RecordRef`),
  KEY `DeviceRef` (`DeviceRef`,`DataFieldNameRef`),
  CONSTRAINT `RecordFieldValue_ibfk_1` FOREIGN KEY (`RecordRef`) REFERENCES `DataRecord` (`Idx`),
  CONSTRAINT `RecordFieldValue_ibfk_2` FOREIGN KEY (`DeviceRef`, `DataFieldNameRef`) REFERENCES `DataField` (`DeviceRef`, `DatafieldName`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `RecordFieldValue`
--

LOCK TABLES `RecordFieldValue` WRITE;
/*!40000 ALTER TABLE `RecordFieldValue` DISABLE KEYS */;
/*!40000 ALTER TABLE `RecordFieldValue` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `User`
--

DROP TABLE IF EXISTS `User`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `User` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `UserName` varchar(30) COLLATE latin1_general_ci NOT NULL,
  `Password` char(128) COLLATE latin1_general_ci NOT NULL,
  `Email` varchar(40) COLLATE latin1_general_ci NOT NULL DEFAULT '',
  `PassSalt` char(8) COLLATE latin1_general_ci NOT NULL,
  `CreatedTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `ModifiedTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`Id`),
  UNIQUE KEY `UserName` (`UserName`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `User`
--

LOCK TABLES `User` WRITE;
/*!40000 ALTER TABLE `User` DISABLE KEYS */;
INSERT INTO `User` VALUES (1,'defaultUser','ea0f5b13c05adaa2db5eb6cc001a632b21b2969db8aa1c88ca704ed16df54d8cd4988c8c89893ea4c2ce6bd2c064373253088dfe7fa84970ebd1f3af5e1d7272','kbumsik@gmail.com','f56d0794','2016-08-25 11:36:33','2016-08-25 11:36:33');
/*!40000 ALTER TABLE `User` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping events for database 'wolfie_home'
--

--
-- Dumping routines for database 'wolfie_home'
--
/*!50003 DROP PROCEDURE IF EXISTS `DataField_Add_I` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `DataField_Add_I`(
    IN `DeviceID_in` 		INTEGER,
	IN `Name_in` 			VARCHAR(10),
    IN `Controllable_in` 	TINYINT(1),
    IN `DataType_in` 		INTEGER,
    IN `Description_in` 	VARCHAR(50) -- Optional, can be NULL

-- Returns (single-row return):
-- 	`Id`			<int>	Newly created ID
-- 	`DeviceRef`		<int>
-- 	`DatafieldName`	<string>
-- 	`Controllable`	<bool?>
-- 	`DataTypeRef`	<int>
-- 	`Description`	<string>
)
BEGIN
	-- input paramets handling
	IF `Description_in` IS NULL THEN
		SET `Description_in` = "";
	END IF;
    
    -- Insert
	INSERT INTO `DataField`(`DeviceRef`,`DatafieldName`,`Controllable`,`DataTypeRef`,`Description`)
		VALUES (`DeviceID_in`,`Name_in`, `Controllable_in`,`DataType_in`, `Description_in`);

	-- Return
	SELECT `Id`,`DeviceRef`,`DatafieldName`,`Controllable`,`DataTypeRef`,`Description`
		FROM `DataField`
		WHERE (`DeviceRef` = `DeviceID_in`) AND (`DatafieldName` = `Name_in`);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `DataField_List_S` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `DataField_List_S`(
	IN `DeviceID_in`	INTEGER

-- Returns (Multi-row return):
-- 	`Id`			<int>
-- 	`DeviceRef`		<int>
-- 	`DatafieldName`	<string>
-- 	`Controllable`	<bool?>
-- 	`DataTypeRef`	<int>
-- 	`Description`	<string>
)
BEGIN

	-- Return
	SELECT `Id`,`DeviceRef`,`DatafieldName`,`Controllable`,`DataTypeRef`,`Description`
		FROM `DataField`
		WHERE (`DeviceRef` = `DeviceID_in`);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `DataType_Add_I` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `DataType_Add_I`(
	IN Name_in	VARCHAR(20),
    IN Description_in VARCHAR(128) -- Optional, can be NULL

-- Returns (single-row return):
-- `Id`				<int>	Newly created ID
-- `TypeName`		<string>
-- `Description`	<string>
)
BEGIN

	-- input paramets handling
	IF `Description_in` IS NULL THEN
		SET `Description_in` = "";
	END IF;

	-- Insert
	INSERT INTO `DataType`(`TypeName`,`Description`)
		VALUES (`Name_in`, `Description_in`);

	-- Return
	SELECT `Id`,`TypeName`,`Description`
		FROM `DataType`
		WHERE (`TypeName` = `Name_in`);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `DataType_List_S` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `DataType_List_S`(
	-- No parameters
	

-- Returns (Multi-row return):
-- `Id`				<int>	Newly created ID
-- `TypeName`		<string>
-- `Description`	<string>
)
BEGIN

	-- Return
	SELECT `Id`,`TypeName`,`Description`
		FROM `DataType`;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Device_Add_I` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `Device_Add_I`(
	IN `UserID_in`		INTEGER,
    IN `Name_in`		VARCHAR(20),
    IN `Location_in`	INTEGER,
    IN `Parent_in`		INTEGER,	-- Can be NULL. But NULL mean it's
                  		        	-- 	a mother device.
    IN `Description_in` VARCHAR(50) -- Optional, can be NULL

-- Returns (single-row return):
-- `Id`				<int>	Newly created ID.
-- `OwnerRef`		<int>
-- `Name`			<string>
-- `LocationRef`	<int>
-- `Parent`			<int>
-- `Description`	<string>
)
BEGIN
	-- input paramets handling
	IF `Description_in` IS NULL THEN
		SET `Description_in` = "";
	END IF;
    
    -- then insert
	INSERT INTO `Device`(`OwnerRef`,`Name`,`LocationRef`,`Parent`,`Description`)
		VALUES (`UserID_in`,`Name_in`,`Location_in`,`Parent_in`,`Description_in`);

	-- return
	SELECT `Id`,`OwnerRef`,`Name`,`LocationRef`,`Parent`,`Description`
		FROM `Device`
		WHERE (`OwnerRef` = `UserID_in`) AND (`Name` = `Name_in`);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Device_List_S` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `Device_List_S`(
	IN `UserID_in`		INTEGER,
    IN `LocationID_in`	INTEGER,		-- Optional. Input NULL if not needed
    IN `ParentID_in`	INTEGER			-- Optional. Input NULL if you want to
                    	       			-- 		See a full list tree.-- Returns (single-row return):

-- Returns (Multi-row return):
-- `Id`				<int>
-- `OwnerRef`		<int>
-- `Name`			<string>
-- `LocationRef`	<int>
-- `Parent`			<int>
-- `Description`	<string>
)
BEGIN

	-- Return
	SELECT `Id`,`OwnerRef`,`Name`,`LocationRef`,`Parent`,`Description`
		FROM `Device`
		WHERE 	(`OwnerRef` = `UserID_in`)
			AND ((`LocationRef` = `LocationID_in`) OR (`LocationID_in` IS NULL))
            AND ((`Parent` = `ParentID_in`) OR (`ParentID_IN` IS NULL));

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Location_Add_I` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `Location_Add_I`(
	IN `UserID_in`		INTEGER,		-- It is integer UserID
    IN `Name_in`		VARCHAR(20),
    IN `Parent_in` 		INTEGER,		-- Can be NULL but NULL means the
                   		        		-- 		location is a mother location
    IN `Description_in`	VARCHAR(50)		-- Optional, can be NULL

-- Returns (single-row return):
-- 	`Id`			<int>	Created Location Id
-- 	`UserRef`		<int>	The rest of parameters should be the same as input
-- 	`Name`			<string>
-- 	`Description`	<string>
-- 	`Parent`		<int>
)
BEGIN
	-- input paramets handling
	IF `Description_in` IS NULL THEN
		SET `Description_in` = "";
	END IF;
    
    -- then insert
	INSERT INTO `Location`(`UserRef`, `Name`,`Description`,`Parent`)
		VALUES (`UserID_in`, `Name_in`, `Description_in`, `Parent_in`);

	-- return
	SELECT `Id`,`UserRef`,`Name`,`Description`,`Parent`
		FROM `Location`
		WHERE `UserRef` = `UserID_in` AND `Name` = `Name_in`;
	
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `User_Add_I` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `User_Add_I`(
	IN UserName_in	VARCHAR(30),
    IN Password_in	VARCHAR(50),
    IN Email_in		VARCHAR(40)

-- Returns (single-row return):
-- 	`Id`		<int>		Created User Id (Note that Id is not UserName)
-- 	`UserName`	<string>
-- 	`Email`		<string>
)
BEGIN
-- Declare id and salt
DECLARE id_generated INTEGER;
DECLARE salt CHAR(8);

-- Declare handlers
-- Error diagnostics from http://dev.mysql.com/doc/refman/5.6/en/get-diagnostics.html
-- RESIGNAL from https://dev.mysql.com/doc/refman/5.7/en/resignal.html
DECLARE `code` CHAR(5) DEFAULT '00000';
DECLARE `msg` TEXT;

DECLARE exit handler FOR sqlexception
	BEGIN
		-- ERROR
        GET DIAGNOSTICS CONDITION 1
        `code` = RETURNED_SQLSTATE, `msg` = MESSAGE_TEXT;
		ROLLBACK;
        SET `msg` = CONCAT("Creating user failed. Code: ", `code`, ". ", `msg`);
        RESIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = `msg`;
	END;
 
DECLARE exit handler FOR sqlwarning
	BEGIN
		-- WARNING
        GET DIAGNOSTICS CONDITION 1
        `code` = RETURNED_SQLSTATE, `msg` = MESSAGE_TEXT;
		ROLLBACK;
        SET `msg` = CONCAT("Creating user warning. Code: ", `code`, ". ", `msg`);
        RESIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = `msg`;
	END;

-- Start
START TRANSACTION;

	-- Set salt
	SET salt = SUBSTRING(MD5(RAND()),-8);

	-- First just put the username and email and salt
	INSERT INTO `User` (`UserName`, `Password`, `Email`, `PassSalt`)
		VALUES (`UserName_in`, "", `Email_in`, salt);

	SET id_generated = (SELECT `Id` FROM `User` WHERE `UserName` = `UserName_in`);

	-- put hash
	UPDATE `User`
		SET `Password` = SHA2(CONCAT(salt,`Password_in`),512)
		WHERE `Id` = id_generated;
    
	-- And then login test
	IF EXISTS (SELECT `Id` FROM `User` 
					WHERE 	(`UserName` = `UserName_in`)
					AND (`Id` = id_generated)
					AND (`Password` = SHA2(CONCAT(salt,`Password_in`),512))
			) THEN
		SELECT `Id`, `UserName`, `Email` FROM `User` WHERE (`UserName` = `UserName_in`);
	ELSE
		-- Rise error
		-- for SIGNAL Sytax, see http://dev.mysql.com/doc/refman/5.6/en/signal.html
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'An login test error occurred', MYSQL_ERRNO = 1001;
	END IF;
    
COMMIT;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `User_Login_S` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `User_Login_S`(
	IN UserName_in	VARCHAR(30),
    IN Password_in	VARCHAR(50)

-- Returns (single-row return):
-- 	`Id`		<int>		Created User Id (Note that Id is not UserName)
-- 	`UserName`	<string>
-- 	`Email`		<string>
)
BEGIN
-- Declare id and salt
DECLARE user_id INTEGER;
DECLARE salt CHAR(8);

SELECT `Id`, `PassSalt`
	INTO user_id, salt
	FROM `User`
    WHERE `UserName` = `UserName_in`;

IF user_id IS NULL THEN
	-- Rise error
	-- for SIGNAL Sytax, see http://dev.mysql.com/doc/refman/5.6/en/signal.html
	SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'No such user', MYSQL_ERRNO = 1001;
END IF;

-- Subqueries with EXISTS
-- See http://dev.mysql.com/doc/refman/5.7/en/exists-and-not-exists-subqueries.html
-- FIXME: Rise error if the password is wrong
SELECT `Id`, `UserName`, `Email`
	FROM `User`
	WHERE 	(`UserName` = `UserName_in`)
		AND (`Password` = SHA2(CONCAT(salt,`Password_in`),512));

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2016-09-05 16:49:56
